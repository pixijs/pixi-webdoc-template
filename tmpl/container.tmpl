<?js
    var self = this;

    docs.forEach((doc, i) => {
      const currentDoc = doc;
      const memberList = currentDoc.members;
?>
<?js if (doc.type === 'mainpage' || (doc.type === 'package')) { ?>
    <?js= self.partial('mainpage.tmpl', doc) ?>
<?js } else if (doc.type === 'source') { ?>
    <?js= self.partial('source.tmpl', doc) ?>
<?js } else { ?>

<section>


<header>
  <div class="header content-size">
      <h2>
        <?js if (doc.ancestors && doc.ancestors.length) { ?>
          <span class="ancestors"><?js= doc.ancestors.join('.') ?></span><?js } ?><?js= (doc.name || title) ? '.' + (doc.name || title) : '' ?>

        <?js if (doc.variation) { ?>
            <sup class="variation"><?js= doc.variation ?></sup>
        <?js } ?>
      </h2>

      <?js if (doc.brief) { ?>
          <div class="class-description"><?js= doc.brief ?></div>
      <?js } ?>
      <?js if (doc.description) { ?>
          <div class="class-description"><?js= doc.description ?></div>
      <?js } ?>
  </div>
</header>

<article class="content-size">
    <div class="container-overview">
        <?js if (doc.type === "ClassDoc" || (doc.type === 'NSDoc' && doc.signature)) { ?>
            <?js= self.partial('method.tmpl', doc.children.find(childDoc => childDoc.name === "constructor") || doc) ?>
        <?js } else { ?>
            <?js= self.partial('details.tmpl', doc) ?>

            <?js if (doc.examples && doc.examples.length) { ?>
                <h3>Example<?js= doc.examples.length > 1? 's':'' ?></h3>
                <?js= self.partial('examples.tmpl', doc.examples) ?>
            <?js } ?>
        <?js } ?>
    </div>

    <?js if (doc.extends && doc.extends.length) { ?>
        <h3 class="subsection-title">Extends</h3>

        <ul>
          <?js doc.extends.forEach(function(doc) {
              const symbolPath = typeof doc === "string"? doc : doc.path; ?>

            <li><?js= self.linkto(symbolPath, symbolPath) ?></li>
          <?js }); ?>
        </ul>
    <?js } ?>

    <?js if (doc.implements && doc.implements.length) { ?>
        <h3 class="subsection-title">Implements</h3>

        <ul>
          <?js doc.implements.forEach(function(doc) {
              const symbolPath = typeof doc === "string" ? doc : doc.path; ?>

            <li><?js= self.linkto(symbolPath, symbolPath) ?></li>
          <?js }); ?>
        </ul>
    <?js } ?>

    <?js if (doc.mixes && doc.mixes.length) { ?>
        <h3 class="subsection-title">Mixes In</h3>

        <ul>
          <?js doc.mixes.forEach(function(doc) {
            const symbolPath = typeof doc === "string" ? doc : doc.path; ?>

            <li><?js= self.linkto(symbolPath, symbolPath) ?></li>
          <?js }); ?>
        </ul>
    <?js } ?>

    <?js if (doc.requires && doc.requires.length) { ?>
        <h3 class="subsection-title">Requires</h3>

        <ul><?js doc.requires.forEach(function(r) { ?>
            <li><?js= self.linkto(r, r) ?></li>
        <?js }); ?></ul>
    <?js } ?>

    <?js
        var classes = self.find({type: "ClassDoc", memberof: doc.path});
        if (classes && classes.length) {
    ?>
        <h3 class="subsection-title">Classes</h3>

        <dl><?js classes.forEach(function(c) { ?>
            <dt><?js= self.linkto(c.path, c.name) ?></dt>
            <dd><?js if (c.summary) { ?><?js= c.summary ?><?js } ?></dd>
        <?js }); ?></dl>
    <?js } ?>

    <?js
        var interfaces = self.find({type: 'interface', memberof: doc.path});
        if (interfaces && interfaces.length) {
    ?>
        <h3 class="subsection-title">Interfaces</h3>

        <dl><?js interfaces.forEach(function(i) { ?>
            <dt><?js= self.linkto(i.path, i.name) ?></dt>
            <dd><?js if (i.summary) { ?><?js= i.summary ?><?js } ?></dd>
        <?js }); ?></dl>
    <?js } ?>

    <?js
        var mixins = self.find({type: 'mixin', memberof: doc.path});
        if (mixins && mixins.length) {
    ?>
        <h3 class="subsection-title">Mixins</h3>

        <dl><?js mixins.forEach(function(m) { ?>
            <dt><?js= self.linkto(m.path, m.name) ?></dt>
            <dd><?js if (m.summary) { ?><?js= m.summary ?><?js } ?></dd>
        <?js }); ?></dl>
    <?js } ?>

    <?js
        var namespaces = self.find({type: 'namespace', memberof: doc.path});
        if (namespaces && namespaces.length) {
    ?>
        <h3 class="subsection-title">Namespaces</h3>

        <dl><?js namespaces.forEach(function(n) { ?>
            <dt><?js= self.linkto(n.path, n.name) ?></dt>
            <dd><?js if (n.summary) { ?><?js= n.summary ?><?js } ?></dd>
        <?js }); ?></dl>
    <?js } ?>

    <?js
        var members = memberList.filter(child => child.type === 'PropertyDoc')

        // symbols that are assigned to module.exports are not globals, even though they're not a memberof anything
        if (members && members.length && members.forEach) {
            members = members.filter(function(m) {
                return m.path && m.path.indexOf('module:') !== 0;
            });
        }
        if (members.length) {
    ?>
        <h3 class="subsection-title">Members</h3>

        <?js members.forEach(function(p) { ?>
            <?js= self.partial('members.tmpl', p) ?>
        <?js }); ?>
    <?js } ?>

    <?js
        var methods = memberList.filter(child => child.type === 'MethodDoc' && child.name !== 'constructor');
        if (methods && methods.length && methods.forEach) {
    ?>
        <h3 class="subsection-title">Methods</h3>

        <?js methods.forEach(function(m) { ?>
            <?js= self.partial('method.tmpl', m) ?>
        <?js }); ?>
    <?js } ?>

    <?js
        var typedefs = doc.children.filter(child => child.type === "TypedefDoc");
        if (typedefs.length) {
    ?>
        <h3 class="subsection-title">Type Definitions</h3>

        <?js typedefs.forEach(function(e) {
                if (e.signature) {
            ?>
                <?js= self.partial('method.tmpl', e) ?>
            <?js
                }
                else {
            ?>
                <?js= self.partial('members.tmpl', e) ?>
            <?js
                }
            }); ?>
    <?js } ?>

    <?js
        var events = memberList.filter(child => child.type === "EventDoc");

        if (events && events.length && events.forEach) {
    ?>
        <h3 class="subsection-title">Events</h3>

        <?js events.forEach(function(e) { ?>
            <?js= self.partial('method.tmpl', e) ?>
        <?js }); ?>
    <?js } ?>
</article>

</section>
<?js } ?>

<?js }); ?>
